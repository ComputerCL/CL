//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinClient.BookServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookServiceRef.IBookService", CallbackContract=typeof(WinClient.BookServiceRef.IBookServiceCallback))]
    public interface IBookService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBook", ReplyAction="http://tempuri.org/IBookService/GetBookResponse")]
        string GetBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/GetBook", ReplyAction="http://tempuri.org/IBookService/GetBookResponse")]
        System.Threading.Tasks.Task<string> GetBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/AddBook", ReplyAction="http://tempuri.org/IBookService/AddBookResponse")]
        string AddBook(string book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/AddBook", ReplyAction="http://tempuri.org/IBookService/AddBookResponse")]
        System.Threading.Tasks.Task<string> AddBookAsync(string book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/EditBook", ReplyAction="http://tempuri.org/IBookService/EditBookResponse")]
        string EditBook(string book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/EditBook", ReplyAction="http://tempuri.org/IBookService/EditBookResponse")]
        System.Threading.Tasks.Task<string> EditBookAsync(string book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/SearchBook", ReplyAction="http://tempuri.org/IBookService/SearchBookResponse")]
        string SearchBook(string category, string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookService/SearchBook", ReplyAction="http://tempuri.org/IBookService/SearchBookResponse")]
        System.Threading.Tasks.Task<string> SearchBookAsync(string category, string searchString);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBookService/DisplayName")]
        void DisplayName(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBookService/DisplayName")]
        System.Threading.Tasks.Task DisplayNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBookService/DisplayResult")]
        void DisplayResult(string result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookServiceChannel : WinClient.BookServiceRef.IBookService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookServiceClient : System.ServiceModel.DuplexClientBase<WinClient.BookServiceRef.IBookService>, WinClient.BookServiceRef.IBookService {
        
        public BookServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public BookServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public BookServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string GetBook(int id) {
            return base.Channel.GetBook(id);
        }
        
        public System.Threading.Tasks.Task<string> GetBookAsync(int id) {
            return base.Channel.GetBookAsync(id);
        }
        
        public string AddBook(string book) {
            return base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task<string> AddBookAsync(string book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public string EditBook(string book) {
            return base.Channel.EditBook(book);
        }
        
        public System.Threading.Tasks.Task<string> EditBookAsync(string book) {
            return base.Channel.EditBookAsync(book);
        }
        
        public string SearchBook(string category, string searchString) {
            return base.Channel.SearchBook(category, searchString);
        }
        
        public System.Threading.Tasks.Task<string> SearchBookAsync(string category, string searchString) {
            return base.Channel.SearchBookAsync(category, searchString);
        }
        
        public void DisplayName(string name) {
            base.Channel.DisplayName(name);
        }
        
        public System.Threading.Tasks.Task DisplayNameAsync(string name) {
            return base.Channel.DisplayNameAsync(name);
        }
    }
}
